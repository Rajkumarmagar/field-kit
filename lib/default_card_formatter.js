// Generated by CoffeeScript 1.4.0
(function() {
  var DefaultCardFormatter, DelimitedTextFormatter,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  if (typeof require !== "undefined" && require !== null) {
    DelimitedTextFormatter = require('./delimited_text_formatter');
  } else {
    DelimitedTextFormatter = this.FieldKit.DelimitedTextFormatter;
  }

  DefaultCardFormatter = (function(_super) {

    __extends(DefaultCardFormatter, _super);

    function DefaultCardFormatter() {
      return DefaultCardFormatter.__super__.constructor.apply(this, arguments);
    }

    DefaultCardFormatter.prototype.delimiter = ' ';

    DefaultCardFormatter.prototype.maximumLength = 16 + 3;

    DefaultCardFormatter.prototype.hasDelimiterAtIndex = function(index) {
      return index === 4 || index === 9 || index === 14;
    };

    DefaultCardFormatter.prototype.parse = function(text) {
      return DefaultCardFormatter.__super__.parse.call(this, (text != null ? text : '').replace(/[^\d]/g, ''));
    };

    return DefaultCardFormatter;

  })(DelimitedTextFormatter);

  if (typeof module !== "undefined" && module !== null) {
    module.exports = DefaultCardFormatter;
  } else {
    (this.FieldKit || (this.FieldKit = {})).DefaultCardFormatter = DefaultCardFormatter;
  }

}).call(this);
