// Generated by CoffeeScript 1.4.0
(function() {
  var Formatter;

  Formatter = (function() {

    function Formatter() {}

    Formatter.prototype.maximumLength = null;

    Formatter.prototype.format = function(text) {
      if (text == null) {
        text = '';
      }
      if (this.maximumLength != null) {
        text = text.substring(0, this.maximumLength);
      }
      return text;
    };

    Formatter.prototype.parse = function(text) {
      if (text == null) {
        text = '';
      }
      if (this.maximumLength != null) {
        text = text.substring(0, this.maximumLength);
      }
      return text;
    };

    Formatter.prototype.isChangeValid = function(change) {
      var available, caret, newText, text, truncatedLength, _ref;
      _ref = change.proposed, caret = _ref.caret, text = _ref.text;
      if ((this.maximumLength != null) && text.length > this.maximumLength) {
        available = this.maximumLength - (text.length - change.inserted.text.length);
        newText = change.current.text.substring(0, change.current.caret.start);
        if (available > 0) {
          newText += change.inserted.text.substring(0, available);
        }
        newText += change.current.text.substring(change.current.caret.end);
        truncatedLength = text.length - newText.length;
        change.proposed.text = newText;
        caret.start -= truncatedLength;
        caret.end -= truncatedLength;
      }
      return true;
    };

    return Formatter;

  })();

  if (typeof module !== "undefined" && module !== null) {
    module.exports = Formatter;
  } else {
    (this.FieldKit || (this.FieldKit = {})).Formatter = Formatter;
  }

}).call(this);
